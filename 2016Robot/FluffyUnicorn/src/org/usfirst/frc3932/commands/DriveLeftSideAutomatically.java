// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3932.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc3932.Robot;
import org.usfirst.frc3932.RobotMap;

/**
 *
 */
public class DriveLeftSideAutomatically extends Command {

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	private double m_feet;
	private double m_speed;
	private static final double FUDGE = 1.02;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	
	private DriveAutomaticallyDelegate driveDelegate;

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	public DriveLeftSideAutomatically(double feet, double speed) {

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
		m_feet = feet;
		m_speed = speed * FUDGE;
		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
		driveDelegate = new DriveAutomaticallyDelegate(RobotMap.driveSystemLeftFront, RobotMap.driveSystemLeftRear, false, feet, speed);
		SmartDashboard.putNumber("Left distance", 0.0);
	}

	// Called just before this Command runs the first time
	protected void initialize() {
		driveDelegate.initialize();  	
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute() {
		driveDelegate.execute();
	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished() {
		return driveDelegate.isFinished();
	}

	// Called once after isFinished returns true
	protected void end() {
		SmartDashboard.putNumber("Left distance", m_feet);
		driveDelegate.end();
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted() {
		driveDelegate.interrupted();
	}

}
