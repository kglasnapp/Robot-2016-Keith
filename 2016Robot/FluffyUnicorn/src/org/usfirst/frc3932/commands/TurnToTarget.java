// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3932.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc3932.Robot;

/**
 *
 */
public class TurnToTarget extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	
	private TurnTo t;
	private double d;
	private double m_timeout = 5;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public TurnToTarget() {
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveSystem);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	//DetectTarget GotTheTarget = new DetectTarget();
    	//GotTheTarget.initialize(); 
    	//GotTheTarget.execute();
    	this.setTimeout(m_timeout);
    System.out.println("TurntoTarget Initialized YAW:" + Robot.ahrs.getYaw() + "Angle: " + Robot.camera.turnByAngle);
   Robot.driveSystem.resetEncoders();
    	SmartDashboard.putNumber("RoboRealmCamera", Robot.camera.turnByAngle);
    //	t = new TurnTo(Robot.ahrs.getYaw(),5);
   	t = new TurnTo(Robot.ahrs.getYaw() + Robot.camera.turnByAngle - 4 , 5);
    //	t= new TurnTo(Robot.ahrs.getYaw()+ GotTheTarget.angle -4, 5);
    	t.initialize();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    //	t.execute();
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	
    	//Robot.driveSystem.resetEncoders();
    	boolean done = t.isFinished();
    	
    	System.out.println("turntotarget timeout:" + isTimedOut() + " m_timeout:" + m_timeout + " isFinished: " +
    			done);
        return done || isTimedOut();
    }

    // Called once after isFinished returns true
    protected void end() {
    	System.out.println("TurntoTarget is Finished");
    	t.end();
    	//add by elias
    	Robot.driveSystem.resetEncoders();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	t.interrupted();
    	Robot.driveSystem.resetEncoders();
    }
}
